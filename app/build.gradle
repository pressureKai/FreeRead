apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'walle'


android {
    compileSdkVersion rootProject.ext.androidID.compileSdkVersion
    buildToolsVersion rootProject.ext.androidID.buildToolVersion

    defaultConfig {
        applicationId rootProject.ext.androidID.applicationId
        minSdkVersion rootProject.ext.androidID.minSdkVersion
        targetSdkVersion rootProject.ext.androidID.targetSdkVersion
        versionCode rootProject.ext.androidID.versionCode
        versionName rootProject.ext.androidID.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions{
                arguments = [AROUTER_MODULE_NAME:project.getName()]
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86'
        }

        multiDexEnabled = true
    }

    signingConfigs {
        config {
            keyAlias 'kai'
            keyPassword 'qwedsa135'
            storeFile file("keystore/base.jks")
            storePassword 'qwedsa135'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    walle {
        // 指定渠道包的输出路径
        apkOutputFolder = new File("${project.buildDir}/outputs/channels");
        // 定制渠道包的APK的文件名称
        apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
        // 渠道配置文件
        channelFile = new File("${project.getProjectDir()}/channel")
    }
}

dependencies {
    implementation rootProject.ext.dependencies.jetbrains
    implementation rootProject.ext.dependencies.ktx
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.material
    implementation rootProject.ext.dependencies.constraintlayout
    implementation project(':common')
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation  rootProject.ext.dependencies.test_junit
    androidTestImplementation  rootProject.ext.dependencies.espresso
}
apply from: 'tinker-support.gradle'